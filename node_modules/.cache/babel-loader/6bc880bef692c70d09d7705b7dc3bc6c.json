{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\n\nvar _type = require(\"./type\");\n\nfunction clear(element) {\n  if (element.tagName !== 'INPUT' && element.tagName !== 'TEXTAREA') {\n    // TODO: support contenteditable\n    throw new Error('clear currently only supports input and textarea elements.');\n  }\n\n  if (element.disabled) return; // TODO: track the selection range ourselves so we don't have to do this input \"type\" trickery\n  // just like cypress does: https://github.com/cypress-io/cypress/blob/8d7f1a0bedc3c45a2ebf1ff50324b34129fdc683/packages/driver/src/dom/selection.ts#L16-L37\n\n  const elementType = element.type; // type is a readonly property on textarea, so check if element is an input before trying to modify it\n\n  if (element.tagName === 'INPUT') {\n    // setSelectionRange is not supported on certain types of inputs, e.g. \"number\" or \"email\"\n    element.type = 'text';\n  }\n\n  (0, _type.type)(element, '{selectall}{del}', {\n    delay: 0,\n    initialSelectionStart: element.selectionStart,\n    initialSelectionEnd: element.selectionEnd\n  });\n\n  if (element.tagName === 'INPUT') {\n    element.type = elementType;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","clear","_type","require","element","tagName","Error","disabled","elementType","type","delay","initialSelectionStart","selectionStart","initialSelectionEnd","selectionEnd"],"sources":["C:/Users/infol/Desktop/coding/react.js/Food/node_modules/@testing-library/user-event/dist/clear.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\n\nvar _type = require(\"./type\");\n\nfunction clear(element) {\n  if (element.tagName !== 'INPUT' && element.tagName !== 'TEXTAREA') {\n    // TODO: support contenteditable\n    throw new Error('clear currently only supports input and textarea elements.');\n  }\n\n  if (element.disabled) return; // TODO: track the selection range ourselves so we don't have to do this input \"type\" trickery\n  // just like cypress does: https://github.com/cypress-io/cypress/blob/8d7f1a0bedc3c45a2ebf1ff50324b34129fdc683/packages/driver/src/dom/selection.ts#L16-L37\n\n  const elementType = element.type; // type is a readonly property on textarea, so check if element is an input before trying to modify it\n\n  if (element.tagName === 'INPUT') {\n    // setSelectionRange is not supported on certain types of inputs, e.g. \"number\" or \"email\"\n    element.type = 'text';\n  }\n\n  (0, _type.type)(element, '{selectall}{del}', {\n    delay: 0,\n    initialSelectionStart: element.selectionStart,\n    initialSelectionEnd: element.selectionEnd\n  });\n\n  if (element.tagName === 'INPUT') {\n    element.type = elementType;\n  }\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,KAAR,GAAgBA,KAAhB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AAEA,SAASF,KAAT,CAAeG,OAAf,EAAwB;EACtB,IAAIA,OAAO,CAACC,OAAR,KAAoB,OAApB,IAA+BD,OAAO,CAACC,OAAR,KAAoB,UAAvD,EAAmE;IACjE;IACA,MAAM,IAAIC,KAAJ,CAAU,4DAAV,CAAN;EACD;;EAED,IAAIF,OAAO,CAACG,QAAZ,EAAsB,OANA,CAMQ;EAC9B;;EAEA,MAAMC,WAAW,GAAGJ,OAAO,CAACK,IAA5B,CATsB,CASY;;EAElC,IAAIL,OAAO,CAACC,OAAR,KAAoB,OAAxB,EAAiC;IAC/B;IACAD,OAAO,CAACK,IAAR,GAAe,MAAf;EACD;;EAED,CAAC,GAAGP,KAAK,CAACO,IAAV,EAAgBL,OAAhB,EAAyB,kBAAzB,EAA6C;IAC3CM,KAAK,EAAE,CADoC;IAE3CC,qBAAqB,EAAEP,OAAO,CAACQ,cAFY;IAG3CC,mBAAmB,EAAET,OAAO,CAACU;EAHc,CAA7C;;EAMA,IAAIV,OAAO,CAACC,OAAR,KAAoB,OAAxB,EAAiC;IAC/BD,OAAO,CAACK,IAAR,GAAeD,WAAf;EACD;AACF"},"metadata":{},"sourceType":"script"}